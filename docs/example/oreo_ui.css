/*!
 * Oreo UI v0.3.2 (https://github.com/zhounan007/oreo-ui)
 * Copyright 2017 Newcapec Mobile Internet, Inc.
 * Licensed under the MIT license
 */
*,
*:before,
*:after {
  box-sizing: inherit;
  -webkit-tap-highlight-color: transparent;
}
html,
body {
  position: relative;
  width: 100%;
  margin: 0;
  box-sizing: border-box;
}
body {
  line-height: 1.6;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", SimSun, sans-serif;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}
img {
  border-style: none;
}
button,
input,
select,
textarea {
  font: inherit;
  margin: 0;
}
textarea {
  overflow: auto;
}
input {
  padding: 0;
}
* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-touch-callout: none;
}
a,
input,
textarea,
select {
  outline: 0;
}
a {
  text-decoration: none;
}
@font-face {
  font-weight: normal;
  font-style: normal;
  font-family: "oreo-ui";
  src: url('//at.alicdn.com/t/font_430541_e3t9a2c0flp7gb9.ttf') format('truetype');
}
[class^="oreo-icon-"],
[class*=" oreo-icon-"] {
  position: relative;
  display: inline-block;
  vertical-align: middle;
  font: normal normal normal 14px/1 "oreo-ui";
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
}
[class^="oreo-icon-"]:before,
[class*=" oreo-icon-"]:before {
  display: inline-block;
  margin-left: .2em;
  margin-right: .2em;
}
.oreo-icon-home:before {
  content: "\ee8f";
}
.oreo-icon-user:before {
  content: "\ee9d";
}
.oreo-flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}
.oreo-flex-row {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
}
.oreo-flex-row-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}
.oreo-flex-colum {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
}
.oreo-flex-colum-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}
.oreo-flex-wrap {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}
.oreo-flex-nowrap {
  -webkit-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
}
.oreo-flex .oreo-flex-item {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  min-width: 20PX;
}
.oreo-grid .oreo-flex {
  background: #fff;
}
.oreo-grid .oreo-flex-item.oreo-grid-item {
  position: relative;
}
.oreo-grid .oreo-flex-item.oreo-grid-item:active {
  background: #ddd;
}
.oreo-grid .oreo-flex-item .oreo-grid-item-content {
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 15px 0;
}
.oreo-grid .oreo-flex-item .oreo-grid-item-content .oreo-grid-item-icon {
  width: 25%;
  height: 25%;
}
.oreo-grid .oreo-flex-item .oreo-grid-item-content .oreo-grid-item-text {
  margin-top: 9px;
  font-size: 14px;
  color: #000;
  text-align: center;
}
.oreo-grid.oreo-grid-line .oreo-flex {
  position: relative;
}
.oreo-grid.oreo-grid-line .oreo-flex:after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  height: 1Px;
  width: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
}
[data-dpr="2"] .oreo-grid.oreo-grid-line .oreo-flex:after {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-grid.oreo-grid-line .oreo-flex:after {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-grid.oreo-grid-line .oreo-flex .oreo-grid-item:after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  right: 0;
  top: 0;
  left: auto;
  bottom: 0;
  width: 1px;
  height: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 100% 50%;
          transform-origin: 100% 50%;
}
[data-dpr="2"] .oreo-grid.oreo-grid-line .oreo-flex .oreo-grid-item:after {
  -webkit-transform: scaleX(0.5);
          transform: scaleX(0.5);
}
[data-dpr="3"] .oreo-grid.oreo-grid-line .oreo-flex .oreo-grid-item:after {
  -webkit-transform: scaleX(0.33);
          transform: scaleX(0.33);
}
.oreo-grid.oreo-grid-line .oreo-flex .oreo-grid-item:last-child:after {
  display: none;
}
.oreo-grid.oreo-grid-line .oreo-flex:last-child:after {
  display: none;
}
.oreo-grid.oreo-grid-square .oreo-flex {
  position: relative;
}
.oreo-grid.oreo-grid-square .oreo-flex-item.oreo-grid-item {
  position: relative;
}
.oreo-grid.oreo-grid-square .oreo-flex-item.oreo-grid-item:before {
  display: block;
  content: '';
  padding-bottom: 100%;
}
.oreo-grid.oreo-grid-square .oreo-flex-item .oreo-grid-item-content {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: center;
  padding: 0;
  width: 100%;
  height: 100%;
}
.oreo-grid.oreo-grid-square .oreo-flex-item .oreo-grid-item-content .oreo-grid-item-icon {
  width: 28%;
  height: 28%;
}
.oreo-grid.oreo-grid-square .oreo-flex-item .oreo-grid-item-content .oreo-grid-item-text {
  margin-top: 9px;
  font-size: 14px;
  color: #000;
  text-align: center;
}
.oreo-select {
  width: 100%;
}
.oreo-select-header {
  color: #888;
  padding: .1rem .3rem;
}
.oreo-select-item {
  background: #fff;
  border: 1px solid #ddd;
  padding: 0 0.3rem;
}
.oreo-select-item .oreo-select-list {
  height: 0.8rem;
  line-height: 0.8rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}
.oreo-select-item .oreo-select-list .oreo-checkBox-frame,
.oreo-select-item .oreo-select-list .oreo-radio-frame {
  width: 0.36rem;
  height: 0.36rem;
  outline: 0;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  -webkit-appearance: none;
  background-color: transparent;
  border: 0;
}
.oreo-select-item .oreo-select-list .oreo-checkBox-content,
.oreo-select-item .oreo-select-list .oreo-radio-content {
  margin-left: 0.6rem;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  text-align: left;
}
.oreo-select-item .oreo-select-list.oreo-select-bottomLine::after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  height: 1Px;
  width: 100%;
  background-color: #C7C7C7;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
}
[data-dpr="2"] .oreo-select-item .oreo-select-list.oreo-select-bottomLine::after {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-select-item .oreo-select-list.oreo-select-bottomLine::after {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-select-item .oreo-select-list.disabled-select {
  color: #bbb;
}
.oreo-select-item .oreo-select-list.checkBox-left .oreo-checkBox-content {
  text-align: right;
}
.oreo-select-item .oreo-select-list.checkBox-right .oreo-checkBox-frame,
.oreo-select-item .oreo-select-list.radio-right .oreo-checkBox-frame,
.oreo-select-item .oreo-select-list.checkBox-right .oreo-radio-frame,
.oreo-select-item .oreo-select-list.radio-right .oreo-radio-frame {
  right: 0;
}
.oreo-select-item .oreo-select-list.checkBox-right .oreo-checkBox-content,
.oreo-select-item .oreo-select-list.radio-right .oreo-checkBox-content,
.oreo-select-item .oreo-select-list.checkBox-right .oreo-radio-content,
.oreo-select-item .oreo-select-list.radio-right .oreo-radio-content {
  margin-left: 0;
  margin-right: 0.6rem;
}
.oreo-select-item .oreo-select-list input[type=checkbox]:after,
.oreo-select-item .oreo-select-list input[type=radio]:after {
  height: 0.36rem;
  line-height: 0.36rem;
  font-size: 0.32rem;
  display: block;
  text-align: center;
  font-family: 'FontAwesome';
  color: #C7C7C7;
  color: #fff;
  border: 1px solid #ccc;
}
.oreo-select-item .oreo-select-list input[type=checkbox]:after {
  content: "\f00c";
}
.oreo-select-item .oreo-select-list input[type=radio]:after {
  content: "\f00c";
  border-radius: 50%;
}
.oreo-select-item .oreo-select-list input[type=checkbox]:checked:after,
.oreo-select-item .oreo-select-list input[type=radio]:checked:after {
  color: #4cb0ff;
}
.oreo-select-item .oreo-select-list input[type=checkbox]:disabled:after,
.oreo-select-item .oreo-select-list input[type=radio]:disabled:after {
  color: transparent;
  background: #eee;
}
.oreo-select-item .oreo-select-list input[type=checkbox]:disabled:checked:after,
.oreo-select-item .oreo-select-list input[type=radio]:disabled:checked:after {
  color: #ccc;
  background: #eee;
  border: 1px solid #ccc;
}
.oreo-select-item.inlineBlock-checkBox,
.oreo-select-item.inlineBlock-radio {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
}
.oreo-list-item.oreo-input {
  height: 45px;
  padding: 0 8px;
}
.oreo-list-item.oreo-input:after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  height: 1Px;
  width: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
}
[data-dpr="2"] .oreo-list-item.oreo-input:after {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-list-item.oreo-input:after {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-list-item .oreo-input-label {
  color: #000;
  font-size: 16px;
  margin-right: 5px;
  text-align: left;
  padding: 4px 0;
  width: 85px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.oreo-list-item .oreo-input-control {
  font-size: 14px;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
.oreo-list-item .oreo-input-control input {
  color: #000;
  font-size: 14px;
  -webkit-appearance: none;
          appearance: none;
  width: 100%;
  padding: 4px 0;
  border: 0;
  outline: 0;
  background-color: transparent;
  line-height: 1;
  box-sizing: border-box;
}
.oreo-list-item .oreo-input-control input::-webkit-input-placeholder {
  color: #bbb;
  line-height: 1.2;
}
.oreo-list-item .oreo-input-control input:disabled {
  color: #bbb;
  background-color: #fff;
}
.oreo-list-item.oreo-input-disabled .oreo-input-label {
  color: #bbb;
}
.oreo-switch {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  cursor: pointer;
}
.oreo-switch input[type=checkbox] {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  border: 0 none;
  -webkit-appearance: none;
}
.oreo-switch input[type=checkbox]:checked + .oreo-switch-box {
  background: #4dd865;
}
.oreo-switch input[type=checkbox]:checked + .oreo-switch-box:before {
  -webkit-transform: scale(0);
          transform: scale(0);
}
.oreo-switch input[type=checkbox]:checked + .oreo-switch-box:after {
  -webkit-transform: translateX(20px);
          transform: translateX(20px);
}
.oreo-switch input[type=checkbox]:disabled + .oreo-switch-box {
  opacity: 0.3;
}
.oreo-switch .oreo-switch-box {
  width: 50px;
  height: 30px;
  border-radius: 30px;
  background: #e5e5e5;
}
.oreo-switch .oreo-switch-box:before {
  content: '';
  position: absolute;
  left: 1px;
  top: 1px;
  width: 48px;
  height: 28px;
  border-radius: 28px;
  background: #fff;
  -webkit-transition: all .2s;
  transition: all .2s;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.oreo-switch .oreo-switch-box:after {
  content: '';
  height: 28px;
  width: 28px;
  border-radius: 28px;
  background: #fff;
  position: absolute;
  left: 1px;
  top: 1px;
  -webkit-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition: all .2s;
  transition: all .2s;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.21);
}
.oreo-list-item.oreo-textarea {
  position: relative;
  padding: 0 8px;
}
.oreo-list-item .oreo-textarea-control {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  padding: 9px 0;
}
.oreo-list-item .oreo-textarea-control textarea {
  display: block;
  padding: 0;
  border: 0;
  width: 100%;
  line-height: 21px;
  color: #000;
  font-size: 14px;
  background-color: transparent;
  overflow: visible;
  resize: none;
  word-break: break-all;
  word-wrap: break-word;
}
.oreo-list-item .oreo-textarea-count {
  position: absolute;
  bottom: 3px;
  right: 3px;
  color: #bbb;
  font-size: 14px;
}
.oreo-button {
  display: block;
  position: relative;
  outline: 0;
  padding: 0;
  text-align: center;
  font-size: 16px;
  color: #108ee9;
  background: #fff;
  border: 1PX solid #108ee9;
  border-radius: 5px;
  height: 42px;
  line-height: 42px;
}
.oreo-button:active {
  background: rgba(0, 122, 255, 0.15);
}
.oreo-button-disabled {
  color: #bbb;
  background: #ddd;
  border: 0;
}
.oreo-button-primary {
  color: #fff;
  background: #108ee9;
  border: 1PX solid #108ee9;
}
.oreo-button-primary.oreo-button-disabled {
  opacity: .7!important;
}
.oreo-button-primary:active {
  background-color: #1284d6;
}
.oreo-button-success {
  color: #fff;
  background: #1AAD19;
  border: 1PX solid #1AAD19;
}
.oreo-button-success.oreo-button-disabled {
  opacity: .7!important;
}
.oreo-button-success:active {
  background-color: #179B16;
}
.oreo-button-error {
  color: #fff;
  background: #E64340;
  border: 1PX solid #E64340;
}
.oreo-button-error.oreo-button-disabled {
  opacity: .7!important;
}
.oreo-button-error:active {
  background-color: #CE3C39;
}
.oreo-button-inline {
  display: inline-block;
  padding: 0 15px;
}
.oreo-button-round {
  border-radius: 200px;
}
.oreo-button-small {
  height: 30px;
  line-height: 30px;
}
.oreo-list {
  position: relative;
}
.oreo-list.no-header {
  margin-top: .7rem;
}
.oreo-list.oreo-list-line .oreo-list-body:before {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  left: 0;
  top: 0;
  right: 0;
  bottom: auto;
  height: 1Px;
  width: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 50% 0;
          transform-origin: 50% 0;
}
[data-dpr="2"] .oreo-list.oreo-list-line .oreo-list-body:before {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-list.oreo-list-line .oreo-list-body:before {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-list.oreo-list-line .oreo-list-body:after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  height: 1Px;
  width: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
}
[data-dpr="2"] .oreo-list.oreo-list-line .oreo-list-body:after {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-list.oreo-list-line .oreo-list-body:after {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-list-header {
  padding: 15px 15px 9px;
  font-size: 14px;
  color: #888;
  display: inline-block;
  width: 100%;
  box-sizing: border-box;
}
.oreo-list-footer {
  padding: 9px 15px 15px;
  font-size: 14px;
  color: #888;
}
.oreo-list-body {
  position: relative;
  background-color: #fff;
}
.oreo-list-body > div:not(:last-child) .oreo-list-item-line:after {
  content: " ";
  position: absolute;
  display: block;
  z-index: 15;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  height: 1Px;
  width: 100%;
  background-color: #ddd;
  -webkit-transform-origin: 50% 100%;
          transform-origin: 50% 100%;
}
[data-dpr="2"] .oreo-list-body > div:not(:last-child) .oreo-list-item-line:after {
  -webkit-transform: scaleY(0.5);
          transform: scaleY(0.5);
}
[data-dpr="3"] .oreo-list-body > div:not(:last-child) .oreo-list-item-line:after {
  -webkit-transform: scaleY(0.33);
          transform: scaleY(0.33);
}
.oreo-list-item {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding-left: 8px;
  min-height: 45px;
  background-color: #fff;
  overflow: hidden;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
}
.oreo-list-item img,
.oreo-list-item i {
  width: 22px;
  vertical-align: middle;
}
.oreo-list-item-thumb:first-child {
  margin-right: 8px;
}
.oreo-list-item-line {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  padding-right: 8px;
  overflow: hidden;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  min-height: 45px;
}
.oreo-list-item-line .oreo-list-item-content {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
  color: #000;
  font-size: 16px;
}
.oreo-list-item-line .oreo-list-item-extra {
  -webkit-flex-basis: 36%;
      -ms-flex-preferred-size: 36%;
          flex-basis: 36%;
  color: #888;
  font-size: 15px;
  text-align: right;
}
.oreo-list-item-line .oreo-list-arrow {
  visibility: hidden;
  display: block;
  width: 15px;
  height: 15px;
  margin-left: 5px;
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20width%3D%2216%22%20height%3D%2226%22%20viewBox%3D%220%200%2016%2026%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3Cg%20id%3D%22UI-KIT_%E5%9F%BA%E7%A1%80%E5%85%83%E4%BB%B6%22%20stroke%3D%22none%22%20stroke-width%3D%221%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20id%3D%229.9%E5%9F%BA%E7%A1%80%E5%85%83%E4%BB%B6%22%20transform%3D%22translate(-5809.000000%2C%20-8482.000000)%22%20fill%3D%22%23C7C7CC%22%3E%3Cpolygon%20id%3D%22Disclosure-Indicator%22%20points%3D%225811%208482%205809%208484%205820.5%208495%205809%208506%205811%208508%205825%208495%22%3E%3C%2Fpolygon%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
}
.oreo-list-item-line .oreo-list-arrow-down {
  visibility: visible;
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
}
.oreo-list-item-line .oreo-list-arrow-up {
  visibility: visible;
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg);
}
.oreo-list-item.oreo-list-item-multi .oreo-list-item-line {
  padding: 10px 15px 10px 0;
}
.oreo-list-item.oreo-list-item-multi .oreo-list-item-content .oreo-list-item-brief {
  color: #888;
  font-size: 12px;
  line-height: 1.5;
}
.oreo-list-item.oreo-list-item-link {
  cursor: pointer;
}
.oreo-list-item.oreo-list-item-link .oreo-list-arrow {
  visibility: visible;
}
.oreo-list-item.oreo-list-item-link:active {
  background: #ddd;
}

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> dev
